<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cims.business.card.mapper.CardSaleMapper">
    <resultMap id="BaseResultMap" type="com.cims.business.card.entity.CardSale">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="card_no" jdbcType="VARCHAR" property="cardNo"/>
        <result column="project_id" jdbcType="INTEGER" property="projectId"/>
        <result column="price" jdbcType="DECIMAL" property="price"/>
        <result column="sale_date" jdbcType="DATE" property="saleDate"/>
        <result column="receiver" jdbcType="VARCHAR" property="receiver"/>
        <result column="create_user_id" jdbcType="BIGINT" property="createUserId"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, card_no, project_id, price, sale_date, receiver, create_user_id, create_time
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from card_sale
        where id = #{id,jdbcType=BIGINT}
    </select>

    <select id="listByCardNos" resultType="com.cims.business.card.entity.CardSale">
        select card_no,price,sale_date from card_sale
        where card_no in
        <foreach collection="cardNos" item="cardNo" separator="," open="(" close=")">
            #{cardNo}
        </foreach>
    </select>

    <select id="list" resultType="com.cims.business.card.vo.CardSaleListVO">
        select
        c.id, c.main_type, c.secondary_type, c.bank_name, c.owner, c.card_no, c.id_no, c.ukey_password, c.status,
        c.phone_no, c.phone_password,
        w.name as warehouse_name,
        cc.channel_name
        from card c
        left join warehouse w on c.warehouse_id = w.id
        left join card_purchase cp on c.card_no = cp.card_no
        left join card_channel cc on cp.channel = cc.id
        <where>
            c.is_delete = 0 and c.status = 0
            <if test="bankName != null and bankName != ''">
                and c.bank_name like concat('%',#{bankName},'%')
            </if>
            <if test="owner != null and owner != ''">
                and c.owner like concat('%',#{owner},'%')
            </if>
            <if test="mainType != null">
                and c.main_type = #{mainType}
            </if>
            <if test="secondaryType != null">
                and c.secondary_type = #{secondaryType}
            </if>
            <if test="warehouseId != null">
                and c.warehouse_id = #{warehouseId}
            </if>
            <if test="channelId != null">
                and cp.channel = #{channelId}
            </if>
        </where>
    </select>

    <select id="listDetail" resultType="com.cims.business.card.vo.CardSaleDetailVO">
        select
        cs.id, cs.price, cs.sale_date, cs.receiver, cs.project_id,
        c.main_type, c.bank_name, c.owner, c.card_no, c.province, c.city, c.branch_name,
        c.id_no, c.login_password, c.pay_password, c.ukey_password,
        c.type_user_name, c.type_login_password, c.type_pay_password,
        c.secondary_type, c.status,c.phone_no, c.phone_password,
        c.roaming_end_date, c.comment, c.warehouse_id,
        cp.purchase_date, cp.channel as channel_id, cp.balance, cp.ckr
        from card_sale cs
        left join card c on c.card_no = cs.card_no
        left join card_purchase cp on c.card_no = cp.card_no
        <where>
            c.is_delete = 0
            <if test="bankName != null and bankName != ''">
                and c.bank_name like concat('%',#{bankName},'%')
            </if>
            <if test="owner != null and owner != ''">
                and c.owner like concat('%',#{owner},'%')
            </if>
            <if test="mainType != null">
                and c.main_type = #{mainType}
            </if>
            <if test="secondaryType != null">
                and c.secondary_type = #{secondaryType}
            </if>
            <if test="warehouseId != null">
                and c.warehouse_id = #{warehouseId}
            </if>
            <if test="channelId != null">
                and cp.channel = #{channelId}
            </if>
        </where>
    </select>

    <select id="selectByCardNo" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from card_sale
        where card_no = #{cardNo,jdbcType=VARCHAR}
    </select>

    <insert id="insertBatch">
        insert into card_sale (card_no, project_id,
        price, sale_date, receiver,
        create_user_id)
        values
        <foreach collection="list" item="item" separator=",">
            (#{item.cardNo,jdbcType=VARCHAR}, #{item.projectId,jdbcType=INTEGER},
            #{item.price,jdbcType=DECIMAL}, #{item.saleDate,jdbcType=DATE}, #{item.receiver,jdbcType=VARCHAR},
            #{createUserId,jdbcType=BIGINT})
        </foreach>
        ON DUPLICATE KEY UPDATE
        card_no = values(card_no),project_id = values(project_id),
        price = values(price),sale_date = values(sale_date),receiver = values(receiver),
        create_user_id = values(create_user_id)
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.cims.business.card.entity.CardSale">
        update card_sale
        <set>
            <if test="cardNo != null">
                card_no = #{cardNo,jdbcType=VARCHAR},
            </if>
            <if test="projectId != null">
                project_id = #{projectId,jdbcType=INTEGER},
            </if>
            <if test="price != null">
                price = #{price,jdbcType=DECIMAL},
            </if>
            <if test="saleDate != null">
                sale_date = #{saleDate,jdbcType=DATE},
            </if>
            <if test="receiver != null">
                receiver = #{receiver,jdbcType=VARCHAR},
            </if>
            <if test="createUserId != null">
                create_user_id = #{createUserId,jdbcType=BIGINT},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

</mapper>